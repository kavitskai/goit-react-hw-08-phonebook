{"version":3,"sources":["redux/auth/auth-selectors.js","components/AppBar/AppBar.styled.jsx","components/Navigation/Navigation.styled.jsx","components/AuthNav/AuthNav.jsx","components/Navigation/Navigation.jsx","components/UserMenu/UserMenu.styled.jsx","components/images/default-avatar.png","components/UserMenu/UserMenu.jsx","components/AppBar/AppBar.jsx","components/Spinner/Spinner.jsx","Routers/PrivateRouter.jsx","Routers/PublicRouter.jsx","App/App.jsx","redux/auth/auth-slice.js","redux/store.js","index.js","redux/auth/auth-operations.js","redux/contacts/contacts-operations.js","App/App.styled.jsx","redux/contacts/contact-slice.js"],"names":["authSelectors","state","auth","isLoggedIn","user","name","email","Header","styled","header","NavList","ul","NavItem","li","AuthNav","to","className","activeClassName","Navigation","useSelector","exact","style","fontSize","UserContainer","div","InfoWrap","UserName","p","UserEmail","Avatar","img","LogOutBtn","button","UserMenu","dispatch","useDispatch","src","userAvatar","type","onClick","authOperations","AppBar","override","css","Spinner","color","loading","useState","size","PrivateRoute","children","redirectedTo","routeProps","PublicRoute","restricted","shouldRedirect","HomePage","lazy","RegistrationPage","LoginPage","ContactsPage","App","useEffect","fallback","path","authSlice","createSlice","initialState","token","extraReducers","fulfilled","action","payload","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contacts","contactsReducer","persistReducer","authReducer","devtools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById","axios","defaults","baseURL","headers","common","Authorization","register","createAsyncThunk","credentials","thunkAPI","a","post","data","toast","warning","rejectWithValue","message","login","logout","_","getCurrentUser","getState","persistedToken","get","fetchContacts","error","addContact","contact","removeContact","id","delete","Main","main","MainTitle","h1","HomeContainer","HomeText","ContactsWrap","ContactsSection","contactsSlice","items","filter","reducers","filterContacts","contactOperations","push","actions"],"mappings":"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","file":"static/js/main.77e29cc9.chunk.js","sourcesContent":["const getIsLoggedIn = (state) => state.auth.isLoggedIn;\n\nconst getUserName = (state) => state.auth.user.name;\n\nconst getUserEmail = (state) => state.auth.user.email;\n\nexport const authSelectors = {\n  getIsLoggedIn,\n  getUserName,\n  getUserEmail,\n};\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Header = styled.header`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 25px;\r\n  min-height: 64px;\r\n  padding-right: 24px;\r\n  padding-left: 24px;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  color: #fff;\r\n  background-color: #04125e;\r\n`;","import styled from \"@emotion/styled\";\r\n\r\nexport const NavList = styled.ul`\r\ndisplay: flex;\r\nalign-items: center;\r\n@media screen and (min-width: 320px) {\r\n    width: 320px;\r\n    padding: 0 20px;\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    width: 768px;\r\n    padding: 0 75px;\r\n  }\r\n  @media screen and (min-width: 1024px) {\r\n    width: 1024px;\r\n    padding: 0 71px;\r\n  }\r\n`;\r\nexport const NavItem = styled.li`\r\n&:not(:last-child) {\r\n    margin-right: 50px;\r\n  }\r\n`;","import { NavItem } from \"../Navigation/Navigation.styled\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport function AuthNav() {\r\n    return (\r\n        <>\r\n            <NavItem>\r\n                <NavLink\r\n                    to=\"/register\"\r\n                    className=\"navlink\"\r\n                    activeClassName=\"activelink\">\r\n                    Registration</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n                <NavLink\r\n                    to=\"/login\"\r\n                    className=\"navlink\"\r\n                    activeClassName=\"activelink\">\r\n                    Log in</NavLink>\r\n                </NavItem>\r\n                </>\r\n    )\r\n}","import { useSelector } from \"react-redux\";\r\nimport { authSelectors } from \"../../redux/auth/auth-selectors\";\r\nimport { NavList, NavItem } from \"./Navigation.styled\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { AuthNav } from \"../AuthNav/AuthNav\";\r\nimport ImportContactsIcon from '@material-ui/icons/ImportContacts';\r\n\r\nexport function Navigation() {\r\n    const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n    return (\r\n        <NavList>\r\n            <NavItem>\r\n                <NavLink\r\n                    exact\r\n                    to=\"/\"\r\n                    className=\"navlink\"\r\n                    activeClassName=\"activelogo\">\r\n                    <ImportContactsIcon style={{ fontSize: 50 }}/>\r\n                </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n                <NavLink\r\n                    exact\r\n                    to=\"/\"\r\n                    className=\"navlink\"\r\n                    activeClassName=\"activelink\">\r\n                    Home</NavLink>\r\n            </NavItem>\r\n            {isLoggedIn ? <NavItem>\r\n                <NavLink\r\n                    exact\r\n                    to=\"/contacts\"\r\n                    className=\"navlink\"\r\n                    activeClassName=\"activelink\">\r\n                    Contacts</NavLink>\r\n            </NavItem> : <AuthNav /> }\r\n        </NavList>\r\n    )\r\n}","import styled from \"@emotion/styled\";\r\n\r\nexport const UserContainer = styled.div`\r\ndisplay: flex;\r\njustify-content: space-between;\r\nalign-items: center;\r\nwidth: 350px;\r\nfont-size: 16px;\r\nfont-weight: 700;\r\n`;\r\nexport const InfoWrap = styled.div`\r\n`;\r\nexport const UserName = styled.p`\r\n`;\r\nexport const UserEmail = styled.p`\r\n`;\r\n\r\nexport const Avatar = styled.img`\r\nwidth: 35px;\r\nheight: 35px;\r\nborder-radius: 50%;\r\nbackground-color: white;\r\n`;\r\n\r\nexport const LogOutBtn = styled.button`\r\ndisplay: flex;\r\nflex-direction: column;\r\njustify-content: center;\r\nalign-items: center;\r\ncolor: white;\r\nbackground-color: transparent;\r\nheight: 40px;\r\nborder: none;\r\nfont-weight: 600;\r\ncursor: pointer;\r\n`;","export default __webpack_public_path__ + \"static/media/default-avatar.30d9bf23.png\";","import { useDispatch, useSelector } from 'react-redux';\r\nimport * as authOperations from '../../redux/auth/auth-operations';\r\nimport { authSelectors } from '../../redux/auth/auth-selectors'\r\nimport { UserContainer, InfoWrap, UserName, UserEmail, Avatar, LogOutBtn } from \"./UserMenu.styled\";\r\nimport userAvatar from '../images/default-avatar.png';\r\nimport ExitToAppOutlinedIcon from '@material-ui/icons/ExitToAppOutlined';\r\n\r\nexport function UserMenu() {\r\n    const dispatch = useDispatch();\r\n    const name = useSelector(authSelectors.getUserName);\r\n    const email = useSelector(authSelectors.getUserEmail);\r\n    return (\r\n        <UserContainer>\r\n            <Avatar src={userAvatar}/>\r\n            <InfoWrap>\r\n                <UserName>Welcome, {name}</UserName>\r\n                <UserEmail>{email}</UserEmail>\r\n            </InfoWrap>\r\n            <LogOutBtn type=\"button\" onClick={() => dispatch(authOperations.logout())}><ExitToAppOutlinedIcon style={{ fontSize: 40 }}/>Log out</LogOutBtn>\r\n        </UserContainer>\r\n    )\r\n}","import { useSelector } from \"react-redux\";\r\nimport { authSelectors } from \"../../redux/auth/auth-selectors\";\r\nimport { Header } from \"./AppBar.styled\";\r\nimport { Navigation } from \"../Navigation/Navigation\";\r\nimport { UserMenu } from \"../UserMenu/UserMenu\";\r\n\r\nexport function AppBar() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n    return (\r\n    <Header>\r\n        <Navigation />\r\n        { isLoggedIn && <UserMenu />}        \r\n    </Header>\r\n  )\r\n}","import { useState } from \"react\";\r\nimport { css } from \"@emotion/react\";\r\nimport BeatLoader from \"react-spinners/BeatLoader\";\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: blue;\r\n`;\r\n\r\nexport default function Spinner() {\r\n  return (\r\n      <BeatLoader color=\"#04125e\" loading={useState(true)} css={override} size={80} />\r\n  );\r\n}","import { useSelector } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { authSelectors } from \"../redux/auth/auth-selectors\";\r\n\r\nexport default function PrivateRoute({ children, redirectedTo = '/', ...routeProps }) {\r\n    const isLoggedIn = useSelector(authSelectors.getIsLoggedIn)\r\n    return <Route {...routeProps}>\r\n        {isLoggedIn ? children : <Redirect to={redirectedTo}/>}\r\n    </Route>;\r\n};","import { useSelector } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { authSelectors } from \"../redux/auth/auth-selectors\";\r\n\r\nexport default function PublicRoute({ children, restricted = false, redirectedTo = '/', ...routeProps }) {\r\n    const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n    const shouldRedirect = isLoggedIn && restricted;\r\n    return <Route {...routeProps}>\r\n        {shouldRedirect ? <Redirect to={redirectedTo} /> : children }\r\n        </Route>\r\n};","import { useDispatch } from 'react-redux';\r\nimport { lazy, Suspense, useEffect } from 'react';\r\nimport { Switch } from \"react-router-dom\";\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport { Main } from './App.styled';\r\nimport { AppBar } from '../components/AppBar/AppBar';\r\nimport Spinner from '../components/Spinner/Spinner';\r\nimport * as authOperations from '../redux/auth/auth-operations';\r\n\r\nimport PrivateRoute from '../Routers/PrivateRouter';\r\nimport PublicRoute from '../Routers/PublicRouter';\r\n\r\nconst HomePage = lazy(() => import('../pages/Home'));\r\nconst RegistrationPage = lazy(() => import('../pages/Registrations'));\r\nconst LoginPage = lazy(() => import('../pages/Login'));\r\nconst ContactsPage = lazy(() => import('../pages/Contacts'));\r\n\r\nexport default function App() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(authOperations.getCurrentUser());\r\n  }, [dispatch]);\r\n  return (\r\n    <>\r\n      <AppBar />\r\n      <Main>\r\n        <Suspense fallback={<Spinner/>}>\r\n        <Switch>\r\n\r\n          <PublicRoute exact path=\"/\">\r\n            <HomePage />\r\n          </PublicRoute>\r\n\r\n          <PublicRoute exact path=\"/register\" restricted redirectedTo=\"/\">\r\n            <RegistrationPage />\r\n          </PublicRoute>\r\n\r\n          <PublicRoute exact path=\"/login\" restricted redirectedTo=\"/contacts\">\r\n            <LoginPage />\r\n          </PublicRoute>\r\n\r\n          <PrivateRoute path=\"/contacts\" redirectedTo=\"/login\">\r\n            <ContactsPage />\r\n          </PrivateRoute>\r\n\r\n          </Switch>\r\n          </Suspense>\r\n      </Main>\r\n      <ToastContainer />\r\n      </>\r\n  )\r\n}","import { createSlice } from \"@reduxjs/toolkit\";\nimport * as authOperations from \"./auth-operations\";\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n};\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  extraReducers: {\n    [authOperations.register.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.login.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.getCurrentUser.fulfilled](state, action) {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logout.fulfilled](state, action) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport authReducer from \"./auth/auth-slice\";\nimport contactsReducer from \"./contacts/contact-slice\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\nconst authPersistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    auth: persistReducer(authPersistConfig, authReducer),\n  },\n  middleware,\n  devtools: process.env.NODE_ENV !== \"production\",\n});\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport \"./index.css\";\nimport App from \"./App/App\";\nimport { store, persistor } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import axios from \"axios\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  },\n};\n\nexport const register = createAsyncThunk(\n  \"auth/register\",\n  async (credentials, thunkAPI) => {\n    try {\n      const { data } = await axios.post(\"/users/signup\", credentials);\n      token.set(data.token);\n      toast.warning(\"You have successfully registered\");\n      return data;\n    } catch (error) {\n      toast.warning(\"Such an account already exists\");\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const login = createAsyncThunk(\n  \"auth/logim\",\n  async (credentials, thunkAPI) => {\n    try {\n      const { data } = await axios.post(\"users/login\", credentials);\n      token.set(data.token);\n      toast.warning(\"You are logged into your account\");\n      return data;\n    } catch (error) {\n      toast.warning(\"Something went wrong! Verify your the credentials\");\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const logout = createAsyncThunk(\"auth/logout\", async (_, thunkAPI) => {\n  try {\n    token.unset();\n    toast.warning(\"You are logged out of your account\");\n  } catch (error) {\n    toast.warning(\"Something went wrong!\");\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});\n\nexport const getCurrentUser = createAsyncThunk(\n  \"auth/current\",\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === null) {\n      return thunkAPI.rejectWithValue();\n    }\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.get(\"users/current\");\n      return data;\n    } catch (error) {\n      toast.warning(\"Could not identify you\");\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n","import axios from \"axios\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nexport const fetchContacts = createAsyncThunk(\n  \"contacts/getcontacts\",\n  async () => {\n    try {\n      const { data } = await axios.get(\"/contacts\");\n      return data;\n    } catch (error) {\n      toast.error(\"You don't have any contacts saved yet\");\n    }\n  }\n);\n\nexport const addContact = createAsyncThunk(\n  \"contacts/addcontact\",\n  async (contact) => {\n    try {\n      const { data } = await axios.post(\"/contacts\", contact);\n      return data;\n    } catch (error) {\n      toast.error(\"Failed to add a contact\");\n    }\n  }\n);\n\nexport const removeContact = createAsyncThunk(\n  \"contacts/removecontact\",\n  async (id) => {\n    try {\n      await axios.delete(`/contacts/${id}`);\n      return id;\n    } catch (error) {\n      toast.error(\"Failed to delete a contact\");\n    }\n  }\n);\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Main = styled.main`\r\ntext-align: center;\r\nmargin: 20px auto;\r\npadding: 20px;\r\nbackground-color: #fff;\r\nwidth: 1000px;\r\n`;\r\n\r\nexport const MainTitle = styled.h1`\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\nmargin: 0 auto;\r\npadding-top: 15px;\r\npadding-bottom: 15px;\r\ncolor: #04125e;\r\n`;\r\n\r\nexport const HomeContainer = styled.div`\r\n`;\r\nexport const HomeImg = styled.img``;\r\n\r\nexport const HomeText = styled.p`\r\nfont-weight: 600;\r\nmargin-bottom: 20px;\r\n`;\r\nexport const ContactsWrap = styled.div`\r\n`;\r\nexport const ContactsSection = styled.div`\r\ndisplay: flex;\r\njustify-content: space-between;\r\n`;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport * as contactOperations from \"./contacts-operations\";\n\nconst initialState = {\n  items: [],\n  filter: \"\",\n};\n\nconst contactsSlice = createSlice({\n  name: \"contacts\",\n  initialState,\n  reducers: {\n    filterContacts(state, action) {\n      state.filter = action.payload;\n    },\n  },\n  extraReducers: {\n    [contactOperations.fetchContacts.fulfilled](state, action) {\n      state.items = action.payload;\n    },\n    [contactOperations.addContact.fulfilled](state, action) {\n      state.items.push(action.payload);\n    },\n    [contactOperations.removeContact.fulfilled](state, action) {\n      state.items = state.items.filter(({ id }) => id !== action.payload);\n    },\n  },\n});\n\nexport default contactsSlice.reducer;\nexport const { filterContacts } = contactsSlice.actions;\n"],"sourceRoot":""}